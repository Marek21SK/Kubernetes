apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myapp_helm.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "myapp_helm.name" . }}
    helm.sh/chart: {{ include "myapp_helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }} 
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "myapp_helm.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "myapp_helm.name" . }}        
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      subdomain: mysql-service
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: 3000
        env:
        - name: DB_HOST 
          value: mysql-service
        - name: DB_PORT
          value: "3306"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecretsName }} 
  strategy:
    type: RollingUpdate 
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5 
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "myapp_helm.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "myapp_helm.name" . }}
    helm.sh/chart: {{ include "myapp_helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  type: {{ .Values.service.type }}
  ports:
  - protocol: {{ .Values.service.protocol }}
    port: {{ .Values.service.port }}
    targetPort: {{ .Values.service.targetPort }} 
    nodePort: {{ .Values.service.nodePort }}
    name: {{ .Values.service.name }}
  selector:
    app.kubernetes.io/name: {{ include "myapp_helm.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}